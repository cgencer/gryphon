/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['start-nariya.js']) {
  _$jscoverage['start-nariya.js'] = [];
  _$jscoverage['start-nariya.js'][2] = 0;
  _$jscoverage['start-nariya.js'][5] = 0;
  _$jscoverage['start-nariya.js'][6] = 0;
  _$jscoverage['start-nariya.js'][7] = 0;
  _$jscoverage['start-nariya.js'][10] = 0;
  _$jscoverage['start-nariya.js'][11] = 0;
  _$jscoverage['start-nariya.js'][12] = 0;
  _$jscoverage['start-nariya.js'][13] = 0;
  _$jscoverage['start-nariya.js'][14] = 0;
  _$jscoverage['start-nariya.js'][15] = 0;
  _$jscoverage['start-nariya.js'][17] = 0;
  _$jscoverage['start-nariya.js'][18] = 0;
  _$jscoverage['start-nariya.js'][20] = 0;
  _$jscoverage['start-nariya.js'][23] = 0;
  _$jscoverage['start-nariya.js'][24] = 0;
  _$jscoverage['start-nariya.js'][27] = 0;
  _$jscoverage['start-nariya.js'][28] = 0;
  _$jscoverage['start-nariya.js'][29] = 0;
  _$jscoverage['start-nariya.js'][32] = 0;
  _$jscoverage['start-nariya.js'][35] = 0;
  _$jscoverage['start-nariya.js'][36] = 0;
  _$jscoverage['start-nariya.js'][37] = 0;
}
_$jscoverage['start-nariya.js'][2]++;
var isProduction = process.env.NODE_ENV == "production";
_$jscoverage['start-nariya.js'][5]++;
var winstoon = require("winstoon");
_$jscoverage['start-nariya.js'][6]++;
winstoon.add(winstoon.transports.Console, {timestamp: true});
_$jscoverage['start-nariya.js'][7]++;
var logger = winstoon.createLogger("start-server");
_$jscoverage['start-nariya.js'][10]++;
var ConfigurationManager = require("./configurationManager");
_$jscoverage['start-nariya.js'][11]++;
var configurationManager;
_$jscoverage['start-nariya.js'][12]++;
var path = require("path");
_$jscoverage['start-nariya.js'][13]++;
if (isProduction) {
  _$jscoverage['start-nariya.js'][14]++;
  var confFile = path.resolve(process.env.HOME, ".nariya/nariya.conf");
  _$jscoverage['start-nariya.js'][15]++;
  configurationManager = new ConfigurationManager(confFile);
}
else {
  _$jscoverage['start-nariya.js'][17]++;
  var confFile = path.resolve(__dirname, "../conf/nariya.conf");
  _$jscoverage['start-nariya.js'][18]++;
  configurationManager = new ConfigurationManager(confFile);
}
_$jscoverage['start-nariya.js'][20]++;
configurationManager.updateSync();
_$jscoverage['start-nariya.js'][23]++;
var Deployer = require("./deployer");
_$jscoverage['start-nariya.js'][24]++;
var deployer = new Deployer();
_$jscoverage['start-nariya.js'][27]++;
var Notifiers = require("./notifiers");
_$jscoverage['start-nariya.js'][28]++;
var notifiers = new Notifiers();
_$jscoverage['start-nariya.js'][29]++;
notifiers.addEmail(configurationManager.getEmailInfo());
_$jscoverage['start-nariya.js'][32]++;
var repositories = require("./repositories");
_$jscoverage['start-nariya.js'][35]++;
var WebhookListener = require("./webhookListener");
_$jscoverage['start-nariya.js'][36]++;
var webhookListener = new WebhookListener(configurationManager, repositories, deployer, notifiers);
_$jscoverage['start-nariya.js'][37]++;
webhookListener.listen(configurationManager.getServerInfo().port);
_$jscoverage['start-nariya.js'].source = ["//check for production","var isProduction = process.env.NODE_ENV == 'production';","","//load the logger","var winstoon = require('winstoon');","winstoon.add(winstoon.transports.Console, {timestamp: true});","var logger = winstoon.createLogger('start-server');","","//load the configuration manager","var ConfigurationManager = require('./configurationManager');","var configurationManager;","var path = require('path');","if(isProduction) {","\tvar confFile = path.resolve(process.env.HOME, '.nariya/nariya.conf');","\tconfigurationManager = new ConfigurationManager(confFile);","} else {","\tvar confFile = path.resolve(__dirname, '../conf/nariya.conf');","\tconfigurationManager = new ConfigurationManager(confFile);","}","configurationManager.updateSync();","","//load the deployer","var Deployer = require('./deployer');","var deployer = new Deployer();","","//load the notifiers","var Notifiers = require('./notifiers');","var notifiers = new Notifiers();","notifiers.addEmail(configurationManager.getEmailInfo());","","//var repositories","var repositories = require('./repositories');","","//load the webhook listener","var WebhookListener = require('./webhookListener');","var webhookListener = new WebhookListener(configurationManager, repositories, deployer, notifiers);","webhookListener.listen(configurationManager.getServerInfo().port);",""];
